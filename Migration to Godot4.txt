* Spatial diventa Node3D
* GODOT_CLASS diventa GDCLASS
* Specificare per maggior controllo la clausola "override" nei metodi che vanno in override a quelli di Godot: in questo modo si verifica se i metodi esistono ancora nelle classi base con quella firma
* Dichiarare Virtual i metodi di cui sopra
* _process ha un double in input invece di un float
* _input ha un refrence in input
* @paulmiller GDExtension objects must indeed be instantiated using memnew which ends up calling the Wrapped::_postinitialize method as you identified (https://github.com/godotengine/godot-cpp/issues/1057)
* Avoid multiple inheritance for classes exposed to Godot, as GDCLASS doesn't support this. You can still use multiple inheritance in your own classes as long as they're not exposed to Godot's scripting API.
* It's also a good idea to rename external shaders so that their extension is .gdshader instead of .shader. Godot 3.x supports both extensions, but only .gdshader is supported in Godot 4.0.


Utils:
* per trovare i metodi virtuali esposti da gdextension ricercare BIND_VIRTUAL_METHOD in D:\TheWorld\Prove\Godot4\godot-cpp-4.0 (*.cpp;*.h*) attualmente sono:

	_process
	_physics_process
	_enter_tree
	_exit_tree
	_ready
	_get_configuration_warnings
	_input
	_shortcut_input
	_unhandled_input
	_unhandled_key_input

  esposti da Node